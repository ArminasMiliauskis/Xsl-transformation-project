package lt.eif.viko.amiliauskis.xslt.soap;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.4.3
 * 2021-04-23T13:22:48.714+03:00
 * Generated source version: 3.4.3
 *
 */
@WebServiceClient(name = "SolarSystemServiceImplService",
                  wsdlLocation = "file:/C:/Users/Arme6/AppData/Local/Temp/tempdir8486268959795648068.tmp/Transform_1.wsdl",
                  targetNamespace = "http://soap.xslt.amiliauskis.viko.eif.lt/")
public class SolarSystemServiceImplService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://soap.xslt.amiliauskis.viko.eif.lt/", "SolarSystemServiceImplService");
    public final static QName SolarSystemServiceImplPort = new QName("http://soap.xslt.amiliauskis.viko.eif.lt/", "SolarSystemServiceImplPort");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/Users/Arme6/AppData/Local/Temp/tempdir8486268959795648068.tmp/Transform_1.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(SolarSystemServiceImplService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/C:/Users/Arme6/AppData/Local/Temp/tempdir8486268959795648068.tmp/Transform_1.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public SolarSystemServiceImplService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public SolarSystemServiceImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SolarSystemServiceImplService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public SolarSystemServiceImplService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public SolarSystemServiceImplService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public SolarSystemServiceImplService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns SolarSystemService
     */
    @WebEndpoint(name = "SolarSystemServiceImplPort")
    public SolarSystemService getSolarSystemServiceImplPort() {
        return super.getPort(SolarSystemServiceImplPort, SolarSystemService.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SolarSystemService
     */
    @WebEndpoint(name = "SolarSystemServiceImplPort")
    public SolarSystemService getSolarSystemServiceImplPort(WebServiceFeature... features) {
        return super.getPort(SolarSystemServiceImplPort, SolarSystemService.class, features);
    }

}
